plugins {
  id "org.jetbrains.kotlin.jvm" version "1.2.41"
  id 'maven-publish'
  id 'net.researchgate.release' version '2.7.0'
  id 'com.jfrog.bintray' version '1.8.0'
  id 'com.github.ben-manes.versions' version '0.17.0'
  id "org.jetbrains.dokka" version "0.9.17"
}

ext {
  deps = [
      ktor  : '0.9.2',
      kotlin: '1.2.41',
      junit : '5.2.0'
  ]
}

repositories {
  jcenter()
  maven { url 'https://dl.bintray.com/kotlin/ktor' }
}

dependencies {
  compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$deps.kotlin"
  compile "io.ktor:ktor-server-core:$deps.ktor"

  testCompile("io.ktor:ktor-server-test-host:$deps.ktor") {
    // this depends on logback-classic, which ends up duplicated in IntelliJ's classpath.
    // Gradle hands it right, but to avoid angry warnings in IntelliJ tests, we'll exclude it
    exclude group: 'ch.qos.logback', module: 'logback-classic'
  }
  testRuntime "ch.qos.logback:logback-classic:1.2.3"

  testCompile "org.junit.jupiter:junit-jupiter-api:$deps.junit"
  testImplementation "org.junit.jupiter:junit-jupiter-api:$deps.junit"
  testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$deps.junit"
}

test {
  useJUnitPlatform()
}

compileKotlin {
  kotlinOptions {
    jvmTarget = "1.8"
  }
}
compileTestKotlin {
  kotlinOptions {
    jvmTarget = "1.8"
  }
}
kotlin {
  experimental {
    coroutines "enable"
  }
}

task sourceJar(type: Jar, dependsOn: classes) {
  from sourceSets.main.allSource
}

task docJar(type: Jar, dependsOn: dokka) {
  from dokka.outputDirectory
}

group = 'org.mpierce.ktor.csrf'

publishing {
  publications {
    bintray(MavenPublication) {
      from components.java
      groupId project.group
      artifactId project.name
      version project.version

      artifact sourceJar {
        classifier 'sources'
      }

      artifact docJar {
        classifier 'javadoc'
      }
    }
  }
}

release {
  tagTemplate = 'v$version'
}

bintray {
  user = rootProject.hasProperty('bintrayUser') ? rootProject.property('bintrayUser') : 'FIXME'
  key = rootProject.hasProperty('bintrayApiKey') ? rootProject.property('bintrayApiKey') : 'FIXME'
  publications = ['bintray']

  pkg {
    repo = 'maven'
    licenses = ['Copyfree']
    vcsUrl = 'https://bitbucket.org/marshallpierce/ktor-csrf'
    name = 'org.mpierce.ktor.csrf:ktor-csrf'

    version {
      name = project.version
      released = new Date()
      vcsTag = 'v' + project.version
    }
  }
}

